Merge the sorted lists and reverse the merged list.

struct Node * mergeResult(Node *node1,Node *node2)
    {
        if(node1 == NULL and node2==NULL) return NULL;
        if(node1==NULL)
        {
            Node *prv=nullptr , *curr=node2;
        while(curr)
        {
            Node*next = curr->next;
            curr->next=prv;
            prv=curr;
            curr=next;
        }
        return prv;
        }
        
        else if(node2==NULL)
        {
            Node *prv=nullptr , *curr=node1;
        while(curr)
        {
            Node*next = curr->next;
            curr->next=prv;
            prv=curr;
            curr=next;
            
        }
        return prv;
        }
        Node*ans = node1->data <= node2->data ? node1:node2;
        Node*head = ans;
        Node*curr1= ans==node1?node1->next:node1, *curr2=node2==ans?node2->next:node2;
        while(curr1 and curr2)
        {
            if(curr1->data <= curr2->data)
            {
                ans->next=curr1;
                curr1=curr1->next;
               
            }
            else{
                ans->next = curr2;
                curr2=curr2->next;
            }
            ans = ans->next;
            
        }
        
        ans->next =  curr1!=NULL?curr1:curr2;
        Node *prv=nullptr , *curr=head;
        while(curr)
        {
            Node*next = curr->next;
            curr->next=prv;
            prv=curr;
            curr=next;
            // cout<<curr->data<<" ";curr=curr->next;
        }
        //cout<<"hello\n";
        return prv;
    }
